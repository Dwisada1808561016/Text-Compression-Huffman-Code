Huffman coding adalah algoritma yang dipakai untuk mengurangi kehilangan data pada kompresi. Pada bagian ini dianjurkan untuk menggunakan table variable- length code untuk encoding sebuah sumber data symbol (seperti sebuah karakter pada file) di mana table variable-length code sudah dapat memperkirakan setiap nilai kemungkinan dari sebuah sumber data simbol. Ini dikembangkan oleh David A. Huffman ketika beliau sedang mengambil Ph.D. di MIT, dan menerbitkan sebuah makalah pada tahun 1952 â€œA Method for the Construction of Minimum-Redundancy Codes." Huffman menjadi seorang anggota fakultas MIT setelah kelulusan dan kemudian menjadi anggota pendiri Bagian Ilmu Pengetahuan Komputer di Universitas California, Santa Cruz. 

Huffman coding digunakan secara spesifik untuk memilih gambaran untuk setiap symbol data, dan menghasilkan kode pada prefix-free code (kadang-kadang disebut dengan "prefix codes") (yang adalah, string bit yang menggambarkan suatu lambang khusus yang tidak pernah digambarkan oleh lambang-lambang lain mana pun) yang menggambarkan karakter yang biasa digunakan menjadi sebuah string dari sebuah bit yang lebih pendek.

Huffman juga dapat mendesain metode yang paling efesien untuk kompresi hal ini: tak ada pemetaan lain dari sumber lambang symbol bit perseorangan yang unik, yang akan menghasilkan hasil ukuran rata-rata yang lebih kecil dengan frekuensi lambang yang telah disetujui untuk membuat sebuah code. Sebuah metode yang kemudian ditemukan untuk menjalankan linear time jika data input kemungkinan(diketahui beratnya) sudah disortir. 

Untuk satu set lambang dengan distribusi probabilitas uniform, Huffman coding adalah sepadan dengan simple binary block encoding, contohnya, ASCII coding. Huffman coding adalah metode sebaran luas seperti untuk membuat prefix-free codes sementara. "Huffman code" adalah secara luas dipakai sebagai sinomin untuk "prefix free code" walaupun kode tersebut tidak dihasilkan oleh algoritma Huffman . 

Walaupun Huffman coding secara optimal digunakan untuk lambang-lambang coding dengan diketahui distribusi probabilitasnya, kemampuan optimalisasinya terkadang melakukan kesalahan yang berlebihan yang tidak disangka. Misalnya, aritmatika coding dan LZW coding sering mempunyai kemampuan kompresi yang lebih baik. Kedua metode tersebut dapat mengkombinasikan sebuah symbol angka arbitrer sehingga menghasilkan coding yang lebih effisien, dan secara umum diadaptasikan pada statistika, yang terakhir sangat berguna ketika probabilitasnya tidak diketahui secara persis pada stream. 

Untuk kompresi yang lebih baik koefisien quantized MDCT (untuk blok yang panjang) diatur dari frekuensi terendah sampai frekuensi tertinggi. Seluruh jarak di bagi menjadi 3 bagian, setiap bagian kode dibagi menjadi table Huffman yang berbeda.